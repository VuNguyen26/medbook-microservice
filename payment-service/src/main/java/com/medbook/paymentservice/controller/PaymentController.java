package com.medbook.paymentservice.controller;

import com.medbook.paymentservice.model.Payment;
import com.medbook.paymentservice.repository.PaymentRepository;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/payments") // chá»‰ /payments (Gateway Ä‘Ã£ cÃ³ /api/payments)
public class PaymentController {

    private final PaymentRepository paymentRepository;

    public PaymentController(PaymentRepository paymentRepository) {
        this.paymentRepository = paymentRepository;
    }

    // ðŸ”¹ Láº¥y táº¥t cáº£ payment
    @GetMapping
    public List<Payment> getAllPayments() {
        return paymentRepository.findAll();
    }

    // ðŸ”¹ Táº¡o má»›i payment
    @PostMapping
    public Payment createPayment(@RequestBody Payment payment) {
        return paymentRepository.save(payment);
    }

    // ðŸ”¹ Láº¥y chi tiáº¿t payment theo ID
    @GetMapping("/{id}")
    public Payment getPaymentById(@PathVariable Long id) {
        return paymentRepository.findById(id).orElse(null);
    }

    // ðŸ”¹ Cáº­p nháº­t payment (vÃ­ dá»¥ khi thanh toÃ¡n xong)
    @PutMapping("/{id}")
    public Payment updatePayment(@PathVariable Long id, @RequestBody Payment updatedPayment) {
        return paymentRepository.findById(id)
                .map(payment -> {
                    payment.setAmount(updatedPayment.getAmount());
                    payment.setMethod(updatedPayment.getMethod());
                    payment.setStatus(updatedPayment.getStatus());
                    payment.setTransactionTime(updatedPayment.getTransactionTime());
                    return paymentRepository.save(payment);
                })
                .orElse(null);
    }

    // ðŸ”¹ XÃ³a payment
    @DeleteMapping("/{id}")
    public void deletePayment(@PathVariable Long id) {
        paymentRepository.deleteById(id);
    }
}
