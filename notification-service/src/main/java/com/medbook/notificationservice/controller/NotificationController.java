package com.medbook.notificationservice.controller;

import com.medbook.notificationservice.model.Notification;
import com.medbook.notificationservice.service.NotificationService;
import org.springframework.web.bind.annotation.*;

import java.util.List;

@RestController
@RequestMapping("/api/notifications")
public class NotificationController {

    private final NotificationService service;

    public NotificationController(NotificationService service) {
        this.service = service;
    }

    // üü¢ L·∫•y to√†n b·ªô th√¥ng b√°o (Admin ho·∫∑c test)
    @GetMapping
    public List<Notification> getAll() {
        return service.getAllNotifications();
    }

    // üü¢ L·∫•y danh s√°ch th√¥ng b√°o c·ªßa user c·ª• th·ªÉ
    @GetMapping("/user/{userId}")
    public List<Notification> getByUser(@PathVariable Long userId) {
        return service.getNotificationsByUser(userId);
    }

    // üü¢ T·∫°o th√¥ng b√°o m·ªõi
    @PostMapping
    public Notification create(@RequestBody Notification notification) {
        return service.createNotification(notification);
    }

    // üü¢ ƒê√°nh d·∫•u th√¥ng b√°o l√† ƒë√£ ƒë·ªçc
    @PutMapping("/{id}/read")
    public Notification markAsRead(@PathVariable Long id) {
        return service.markAsRead(id);
    }

    // üî¥ X√≥a th√¥ng b√°o (n·∫øu c·∫ßn)
    @DeleteMapping("/{id}")
    public void deleteNotification(@PathVariable Long id) {
        service.deleteNotification(id);
    }
}
