server:
  port: 8080

spring:
  application:
    name: gateway-service

  cloud:
    gateway:
      routes:
        # üß© USER SERVICE
        - id: user-service
          uri: lb://USER-SERVICE
          predicates:
            - Path=/api/users/**
          filters:
            - StripPrefix=1

        # üß© DOCTOR SERVICE
        - id: doctor-service
          uri: lb://DOCTOR-SERVICE
          predicates:
            - Path=/api/doctors/**
          filters:
            - StripPrefix=1

        # üß© APPOINTMENT SERVICE
        - id: appointment-service
          uri: lb://APPOINTMENT-SERVICE
          predicates:
            - Path=/api/appointments/**
          filters:
            - StripPrefix=1

        # üß© PATIENT SERVICE
        - id: patient-service
          uri: lb://PATIENT-SERVICE
          predicates:
            - Path=/api/patients/**
          filters:
            - StripPrefix=1

        # üß© PAYMENT SERVICE
        - id: payment-service
          uri: lb://PAYMENT-SERVICE
          predicates:
            - Path=/api/payments/**
          filters:
            - StripPrefix=1

        # üß© MEDICAL RECORD SERVICE
        - id: medicalrecord-service
          uri: lb://MEDICALRECORD-SERVICE
          predicates:
            - Path=/api/medical-records/**
          filters:
            - StripPrefix=1

        # üß© PRESCRIPTION SERVICE
        - id: prescription-service
          uri: lb://PRESCRIPTION-SERVICE
          predicates:
            - Path=/api/prescriptions/**
          filters:
            - StripPrefix=1

        # üß© NOTIFICATION SERVICE
        - id: notification-service
          uri: lb://NOTIFICATION-SERVICE
          predicates:
            - Path=/api/notifications/**
          filters:
            - StripPrefix=1

      # üîç Cho ph√©p t·ª± ƒë·ªông ƒë·ªãnh tuy·∫øn (n·∫øu b·∫°n mu·ªën b·ªè config th·ªß c√¥ng)
      discovery:
        locator:
          enabled: true
          lower-case-service-id: true

      # üåê Cho ph√©p frontend (React, Angular, v.v.) truy c·∫≠p CORS qua Gateway
      globalcors:
        corsConfigurations:
          '[/**]':
            allowedOrigins: "*"
            allowedMethods: "*"
            allowedHeaders: "*"

# üõ∞Ô∏è K·∫øt n·ªëi v·ªõi Eureka Server
eureka:
  client:
    register-with-eureka: true
    fetch-registry: true
    service-url:
      defaultZone: http://localhost:8761/eureka/

# ü©∫ Actuator: ki·ªÉm tra health & route (h·ªØu √≠ch khi debug gateway)
management:
  endpoints:
    web:
      exposure:
        include: health,info,gateway
  endpoint:
    health:
      show-details: always

# üßæ Logging
logging:
  level:
    org.springframework.cloud.gateway: INFO
    reactor.netty.http.client: WARN
